name: CI

on:
  push:
    branches: [ main, release/v* ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

  workflow_dispatch:
  workflow_call:
   inputs:
      release:
        required: false
        type: boolean

  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          7.0.x
          8.0.x

    - id: calc-hash
      run: echo "hash=$(git log -1 --pretty=format:"%H" ./src/Compilation/Interop/opa-native/)" >> $GITHUB_OUTPUT

    - name: Cache Opa Native
      id: cache-opa-native
      uses: actions/cache@v4
      with:
        path: ./src/Compilation/Interop/lib
        key: ${{ steps.calc-hash.outputs.hash }}

    - uses: ./.github/workflows/opa-native.yaml
      if: steps.cache-opa-native.outputs.cache-hit != 'true'

    - name: get_opa_lib
      uses: actions/download-artifact@v4
      if: steps.cache-opa-native.outputs.cache-hit != 'true'
      with:
        name: opa-native
        path: ./src/Compilation/Interop/lib

    - name: Restore Tools
      run: dotnet tool restore

    - name: Build
      run: dotnet build -c Release

    - name: Download OPA CLI
      run: |
        echo "Downloading OPA ${OPA_CLI_VERSION}"
        curl -L --fail -o /usr/local/bin/opa https://openpolicyagent.org/downloads/${OPA_CLI_VERSION}/opa_linux_amd64_static
        chmod 755 /usr/local/bin/opa
      env:
        OPA_CLI_VERSION: ${{ vars.OPA_CLI_VERSION }}

    - name: Test
      run: dotnet test -c Release -m:1 --no-build /p:CollectCoverage=true /p:CoverletOutput="${GITHUB_WORKSPACE}/TestResults/" /p:CoverletOutputFormat="lcov%2cjson" /p:MergeWith="${GITHUB_WORKSPACE}/TestResults/coverage.net8.0.json"

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: ${GITHUB_WORKSPACE}/TestResults/coverage.net8.0.info ${GITHUB_WORKSPACE}/TestResults/coverage.net7.0.info
        format: lcov

    - name: Pack
      run: dotnet pack -c Release --no-build

    # - uses: actions/upload-artifact@v3
    #   if: ${{ inputs.release }}
    #   with:
    #     name: artifacts
    #     path: ./artifacts/package/release/*
