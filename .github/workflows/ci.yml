name: CI

on:
  push:
    branches: [ main, release/v* ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

  workflow_dispatch:
  workflow_call:
   inputs:
      release:
        required: false
        type: boolean

  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

env:
  OPA_CLI_VERSION: v1.0.0

jobs:
  native_build:
    uses: ./.github/workflows/opa-native.yaml

  build:
    runs-on: ubuntu-latest
    needs: [ native_build ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Restore Tools
      run: dotnet tool restore

    - name: Get Version
      id: get_version
      shell: pwsh
      run: |
        ./build/versions.ps1
        echo "version=$(dotnet nbgv get-version -v NuGetPackageVersion)" >> $env:GITHUB_OUTPUT

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: get_opa_lib
      uses: actions/download-artifact@v4
      with:
        name: opa-native
        path: ./src/Compilation/Interop/lib

    - name: Build
      run: dotnet build -c Release

    - name: Download OPA CLI
      run: |
        echo "Downloading OPA ${OPA_CLI_VERSION}"
        curl -L --fail -o /usr/local/bin/opa https://openpolicyagent.org/downloads/${OPA_CLI_VERSION}/opa_linux_amd64_static
        chmod 755 /usr/local/bin/opa

    - name: Test net9.0
      run: dotnet test -c Release --no-build -f net9.0

    - name: Test net8.0
      shell: pwsh
      #run: dotnet test -c Release --no-build -f net8.0 -m:1 /p:CollectCoverage=true /p:CoverletOutput="${GITHUB_WORKSPACE}/TestResults/" /p:CoverletOutputFormat="lcov%2cjson" /p:MergeWith="${GITHUB_WORKSPACE}/TestResults/coverage.net8.0.json"
      run: |
        ./build/tests.ps1 -Sequential -Compiler Cli -ExtraFilters '' `
          --configuration Release --no-build -f net8.0 `
          /p:CollectCoverage=true /p:CoverletOutput="${PWD}/TestResults/" /p:CoverletOutputFormat="lcov%2cjson" /p:MergeWith="${PWD}/TestResults/coverage.net8.0.json"

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: ${GITHUB_WORKSPACE}/TestResults/coverage.net8.0.info
        format: lcov

    - name: Pack
      run: dotnet pack -c Release --no-build

    - uses: actions/upload-artifact@v4
      if: ${{ inputs.release }}
      with:
        name: artifacts
        path: ./artifacts/package/release/*
